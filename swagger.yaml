openapi: 3.0.4
info:
  title: CRUD API de Usuarios
  description: API para gestionar usuarios utilizando Flask y MySQL.
  version: 1.0.0
servers:
  - url: http://localhost:5000
    description: Servidor local de desarrollo
paths:
  /usuarios:
    get:
      summary: Obtener todos los usuarios
      description: Devuelve una lista de todos los usuarios registrados.
      responses:
        200:
          description: Lista de usuarios
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID del usuario
                    name:
                      type: string
                      description: Nombre del usuario
                    email:
                      type: string
                      description: Correo electrónico del usuario
                    password:
                      type: string
                      description: Contraseña del usuario
    post:
      summary: Crear un nuevo usuario
      description: Crea un nuevo usuario con los datos proporcionados.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: Usuario creado exitosamente

  /usuarios/{id}:
    get:
      summary: Obtener usuario por ID
      description: Devuelve la información de un usuario específico por ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Datos del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  password:
                    type: string
        404:
          description: Usuario no encontrado
    put:
      summary: Actualizar un usuario
      description: Actualiza los datos de un usuario específico por ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Usuario actualizado exitosamente
    delete:
      summary: Eliminar un usuario
      description: Elimina un usuario específico por ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Usuario eliminado exitosamente

  /login:
    post:
      summary: Iniciar sesión
      description: Autentica al usuario con su correo y contraseña.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Inicio de sesión exitoso
        401:
          description: Credenciales inválidas